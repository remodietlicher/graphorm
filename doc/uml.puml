@startuml sparql-orm

namespace Library {

    class QueryDriver {
        insertQuery()
        selectQuery()
    }
    class ComunicaDriver
    class ComunicaSolidDriver {
        Session session
    }

    class DataModel {
        SubjectMetadata[] subjects
        SubjectManager manager
        createMetadatas()
        createSubjectManager()
        getMetadata()
    }
    class SubjectManager {
        DataModel model
        QueryDriver driver
        find(subjectClass, sources)
        save(subjectClass, source)
    }
    class SubjectMetadata
    class PredicateMetadata

    namespace Global {
        class SubjectMetadataArgs
        class PredicateMetadataArgs
    }
}

namespace UserCode {
    class Decorators
    class SubjectClass
}

Library.ComunicaSolidDriver --> Library.QueryDriver: implements
Library.ComunicaDriver --> Library.QueryDriver: implements

Library.DataModel --* "1..N" Library.SubjectMetadata
Library.DataModel "1" *--* "1" Library.SubjectManager
Library.SubjectManager --* "1" Library.QueryDriver

Library.SubjectMetadata --> Library.Global.SubjectMetadataArgs: built from
Library.SubjectMetadata --* "1..N" Library.PredicateMetadata

Library.PredicateMetadata --> Library.Global.PredicateMetadataArgs: built from

UserCode.SubjectClass --> UserCode.Decorators: has
UserCode.Decorators --> Library.Global.SubjectMetadataArgs: creates
UserCode.Decorators --> Library.Global.PredicateMetadataArgs: creates
@enduml